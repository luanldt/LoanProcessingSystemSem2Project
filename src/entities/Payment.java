package entities;
// Generated Aug 11, 2016 1:42:11 PM by Hibernate Tools 5.1.0.Alpha1

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.validator.constraints.NotEmpty;
import org.hibernate.validator.constraints.Range;

/**
 * Payment generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "Payment", catalog = "vzsoft_chicken_team")
public class Payment implements java.io.Serializable {

	private int paymentId;
	private Contracts contracts;
	private Staffs staffs;
	private int paymentType;
	private Date paymentDate;
	private int duePeriod;
	private BigDecimal paymentAmount;
	private long fineRate;
	private BigDecimal fineAmount;
	private boolean paid;
	private boolean isArchive;
	private String createLog;

	public Payment() {
	}

	public Payment(int paymentId, Contracts contracts, Staffs staffs, int paymentType, Date paymentDate,
			int duePeriod, BigDecimal paymentAmount, long fineRate, BigDecimal fineAmount, boolean paid,
			boolean isArchive, String createLog) {
		this.paymentId = paymentId;
		this.contracts = contracts;
		this.staffs = staffs;
		this.paymentType = paymentType;
		this.paymentDate = paymentDate;
		this.duePeriod = duePeriod;
		this.paymentAmount = paymentAmount;
		this.fineRate = fineRate;
		this.fineAmount = fineAmount;
		this.paid = paid;
		this.isArchive = isArchive;
		this.createLog = createLog;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "PaymentID", unique = true, nullable = false)
	public int getPaymentId() {
		return this.paymentId;
	}

	public void setPaymentId(int paymentId) {
		this.paymentId = paymentId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "contractID", nullable = false)
	public Contracts getContracts() {
		return this.contracts;
	}


	public void setContracts(Contracts contracts) {
		this.contracts = contracts;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "staffID", nullable = false)
	public Staffs getStaffs() {
		return this.staffs;
	}


	public void setStaffs(Staffs staffs) {
		this.staffs = staffs;
	}

	@Column(name = "PaymentType", nullable = false)
	public int getPaymentType() {
		return this.paymentType;
	}

	public void setPaymentType(int paymentType) {
		this.paymentType = paymentType;
	}

	@Column(name = "PaymentDate", nullable = false, length = 10)
	public Date getPaymentDate() {
		return this.paymentDate;
	}

	public void setPaymentDate(Date paymentDate) {
		this.paymentDate = paymentDate;
	}

	@Range(min = 0, message = "Dua Period can't smaller than 0")
	@Column(name = "duePeriod", nullable = false)
	public int getDuePeriod() {
		return this.duePeriod;
	}

	public void setDuePeriod(int duePeriod) {
		this.duePeriod = duePeriod;
	}

	@Range(min = 0, message = "Payment amount can't smaller than 0")
	@Column(name = "PaymentAmount", nullable = false, scale = 4)
	public BigDecimal getPaymentAmount() {
		return this.paymentAmount;
	}

	public void setPaymentAmount(BigDecimal paymentAmount) {
		this.paymentAmount = paymentAmount;
	}

	@Range(min = 0, message = "Fine rate can't smaller than 0")
	@Column(name = "FineRate", nullable = false, precision = 18, scale = 0)
	public long getFineRate() {
		return this.fineRate;
	}

	public void setFineRate(long fineRate) {
		this.fineRate = fineRate;
	}

	@Range(min = 0, message = "Fine amount can't smaller than 0")
	@Column(name = "FineAmount", nullable = false, scale = 4)
	public BigDecimal getFineAmount() {
		return this.fineAmount;
	}

	public void setFineAmount(BigDecimal fineAmount) {
		this.fineAmount = fineAmount;
	}

	@Column(name = "paid", nullable = false)
	public boolean isPaid() {
		return this.paid;
	}

	public void setPaid(boolean paid) {
		this.paid = paid;
	}

	@Column(name = "isArchive", nullable = false)
	public boolean isIsArchive() {
		return this.isArchive;
	}

	public void setIsArchive(boolean isArchive) {
		this.isArchive = isArchive;
	}

	@Column(name = "createLog", nullable = false, length = 30)
	public String getCreateLog() {
		return this.createLog;
	}

	public void setCreateLog(String createLog) {
		this.createLog = createLog;
	}

}
